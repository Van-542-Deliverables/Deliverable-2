#names(CCdata2023)
names(CovidData2020)
location='https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/'
file='CovidData2020.csv'
link=paste0(location,file)
#names(CCdata2020)
#names(CCdata2021)
#names(CCdata2022)
#names(CCdata2023)
names('CovidData2020')
names('2021CovidData')
names('2022CovidData')
names('2023CovidData')
#names(CCdata2020)
#names(CCdata2021)
#names(CCdata2022)
#names(CCdata2023)
names(CovidData2020)
#names(CCdata2020)
#names(CCdata2021)
#names(CCdata2022)
#names(CCdata2023)
str(CovidData2020, width = 70, strict.width='cut')
#names(CCdata2020)
#names(CCdata2021)
#names(CCdata2022)
#names(CCdata2023)
names(CovidData2020)
#names(CCdata2020)
#names(CCdata2021)
#names(CCdata2022)
#names(CCdata2023)
names(CovidData2020.csv)
location='https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/'
file='CovidData2020.csv'
link=paste0(location,file)
load(file=url(link))
location='https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/'
file='CovidData2020.csv'
link=paste0(location,file)
load(file=url(link))
location='https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/'
file='CovidData2020.csv'
link=paste0(location,file)
load(CovidData2020.csv=url(https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/CovidData2020.csv))
location='https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/'
file='CovidData2020.csv'
link=paste0(location,file)
load(CovidData2020=url(https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/CovidData2020.csv))
location='https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/'
file='CovidData2020.csv'
link=paste0(location,file)
load(CovidData2020=url("https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/CovidData2020.csv"))
location='https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/'
file='CovidData2020.csv'
link=paste0(location,file)
load(CovidData2020=url('https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/CovidData2020.csv'))
location='https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/'
file='CovidData2020.csv'
link=paste0(location,file)
load(file=url(link))
location='https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/'
file='CovidData2020.csv'
link=paste0(location,file)
source(filename)
location='https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/'
file='CovidData2020.csv'
link=paste0(location,file)
source(CovidData2020.csv)
location='https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/'
file='CovidData2020.csv'
link=paste0(location,file)
source(CovidData2020)
location='https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/'
file='CovidData2020.csv'
link=paste0(location,file)
source(https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/CovidData2020.csv)
location='https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/'
file='CovidData2020.csv'
link=paste0(location,file)
source('https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/CovidData2020.csv')
Glink'https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/'
Glink"https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/"
Glink"https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/"
Glink"https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/"
Glink="https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/"
Flink="CovidData2020.csv"
CovidData2020=read.csv(paste0(Glink,Flink))
#names(CCdata2020)
#names(CCdata2021)
#names(CCdata2022)
#names(CCdata2023)
names(CovidData2020)
#names(CCdata2020)
#names(CCdata2021)
#names(CCdata2022)
#names(CCdata2023)
names(CovidData2020)
names(CovidData2021)
Glink="https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/"
Flink="CovidData2020.csv"
CovidData2020=read.csv(paste0(Glink,Flink))
Glink="https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/"
Flink="CovidData2021.csv"
CovidData2021=read.csv(paste0(Glink,Flink))
Glink="https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/"
Flink="CovidData2022.csv"
CovidData2022=read.csv(paste0(Glink,Flink))
Glink="https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/"
Flink="CovidData2023.csv"
CovidData2023=read.csv(paste0(Glink,Flink))
#names(CCdata2020)
#names(CCdata2021)
#names(CCdata2022)
#names(CCdata2023)
names(CovidData2020)
names(CovidData2021)
names(CovidData2022)
names(CovidData2023)
str(CovidData2020, width = 70, strict.width='cut')
str(CovidData2021, width = 70, strict.width='cut')
str(CovidData2022, width = 70, strict.width='cut')
str(CovidData2023, width = 70, strict.width='cut')
head(CCdata2020$state,20)
head(CovidData2020$state,20)
head(CovidData2020$state,20)
head(CovidData2021$state,20)
head(CovidData2022$state,20)
head(CovidData2023$state,20)
#Just 2020 since this isn't useful since its showing how many times each state was mentioned, but it doesn't tell how many cases per time each state was mentioned
absoluteT=table(CCdata2020$state)
absoluteT
#absoluteT=table(CCdata2020$cases)
#absoluteT
#Just 2020-not really helpful in this case
prop.table(absoluteT)
#Just 2020-not useful
propT=prop.table(absoluteT)*100
propT
#Just 2020-ot useful here
(tableFreq=as.data.frame(absoluteT))
#Just 2020-still not useful
names(tableFreq)=c("State","Cases")
tableFreq$Percent=as.vector(propT)
tableFreq
#CCdata2020=as.data.frame(table(CCdata2020$cases))
#names(CCdata2020)=c("cases","state")
library(ggplot2)
base1=ggplot(data=CovidData2020, aes(x=state,cases))
bar1=base1+geom_bar(stat = "identity")
bar1
#2020 Data Only
#ideally, the final would look something like this but I would also like a line graph with deaths per state in the same plot
bar1+coord_flip()
#CCdata2021=as.data.frame(table(CCdata2021$cases))
#names(CCdata2021)=c("state","cases")
library(ggplot2)
base2=ggplot(data=CovidData2021, aes(x=state,cases))
bar2=base2+geom_bar(stat = "identity")
bar2
#2021 Data Only
#ideally, the final would look something like this but I would also like a line graph with deaths per state in the same plot
bar2+coord_flip()
#CCdata2022=as.data.frame(table(CCdata2022$cases))
#names(CCdata2022)=c("state","cases")
library(ggplot2)
base3=ggplot(data=CovidData2022, aes(x=state,cases))
bar3=base3+geom_bar(stat = "identity")
bar3
#2022 Data Only
#ideally, the final would look something like this but I would also like a line graph with deaths per state in the same plot
bar3+coord_flip()
#CCdata2023=as.data.frame(table(CCdata2023$cases))
#names(CCdata2023)=c("state","cases")
library(ggplot2)
base4=ggplot(data=CovidData2023, aes(x=state,cases))
bar4=base4+geom_bar(stat = "identity")
bar4
#2023 Data Only
#ideally, the final would look something like this but I would also like a line graph with deaths per state in the same plot
bar4+coord_flip()
summary(CovidData2020$cases)
(statVals=summary(CovidData2020$cases,digits = 6)[1:6])
#How could you see cases per state? So there would be 55 different boxplots with their own min, 1st qu, median, mean, 3rd qu., and max.
library(magrittr)
statVals=statVals%>%as.vector()
base= ggplot(CovidData2020,aes(y = cases))
b1= base + geom_boxplot()
b1=b1 +coord_flip()
b1=b1+ scale_y_continuous(breaks = statVals)
b1
summary(CovidData2021$cases)
(statVals=summary(CovidData2021$cases,digits = 6)[1:6])
library(magrittr)
statVals=statVals%>%as.vector()
base= ggplot(CovidData2021,aes(y = cases))
b2= base + geom_boxplot()
b2=b2 +coord_flip()
b2=b2+ scale_y_continuous(breaks = statVals)
b2
summary(CovidData2022$cases)
(statVals=summary(CovidData2022$cases,digits = 6)[1:6])
library(magrittr)
statVals=statVals%>%as.vector()
base= ggplot(CovidData2022,aes(y = cases))
b3= base + geom_boxplot()
b3=b3 +coord_flip()
b3=b3+ scale_y_continuous(breaks = statVals)
b3
#Just 2023
summary(CovidData2023$cases)
(statVals=summary(CovidData2023$cases,digits = 6)[1:6])
library(magrittr)
statVals=statVals%>%as.vector()
base= ggplot(CovidData2023,aes(y = cases))
b4= base + geom_boxplot()
b4=b4 +coord_flip()
b4=b4+ scale_y_continuous(breaks = statVals)
b4
#Just 2020 since this isn't useful since its showing how many times each state was mentioned, but it doesn't tell how many cases per time each state was mentioned
absoluteT=table(CovidData2020$state)
absoluteT
Glink="https://github.com/543-Van-Deliverables/Deliverable-1/raw/main/"
Flink="CovidData2020.csv"
CovidData2020=read.csv(paste0(Glink,Flink))
names(CovidData2020)
head(CovidData2020$state,20)
# Is this what you need?
covidState2020=aggregate(data=CovidData2020,
cbind(cases,deaths)~state,
sum)
# Is this what you need?
covidState2020=aggregate(data=CovidData2020,
cbind(cases,deaths)~state,
sum)
library(ggplot2)
base=ggplot(data=covidState2020,
aes(x=reorder(state,cases),y=cases))
base + geom_bar(stat = 'identity') + coord_flip()
library(ggplot2)
base=ggplot(data=covidState2020,
aes(x=deaths,y=cases))
base + geom_text(aes(label=state))
rm(list = ls())
Flink="allCovid_YearState_Long.RDS"
Covid=readRDS(Flink)
rm(list = ls())
Flink="allCovid_YearState_Long.RDS"
Covid=readRDS(Flink)
names(Covid)
library(ggplot2)
base=ggplot(data=Covid,
aes(x=reorder(state,pct_value,min),y=pct_value))
base + geom_bar(stat = 'identity') + facet_grid(year~pct_type) + coord_flip()
library(lemon)
ggplot(data = Covid,
aes(y = ifelse(pct_type == "pct_cases_year",
yes = -pct_value,
no = pct_value),
x = reorder(state,-pct_value),
fill = pct_type)) + geom_bar(stat = 'identity') +
scale_y_symmetric(labels = abs) + coord_flip() + facet_grid(year~.)
Glink='hhttps://github.com/Van-542-Deliverables/Deliverable-2/raw/main/'
Flink='CountryRankingFinal.csv'
CountryRankingFinal=read.csv(paste0(Glink,Flink))
Glink='https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/'
Flink='CountryRankingFinal.csv'
CountryRankingFinal=read.csv(paste0(Glink,Flink))
Glink="https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/"
Flink='CountryRankingFinal.csv'
CountryRankingFinal=read.csv(paste0(Glink,Flink))
Glink="https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/"
Flink="CountryRankingFinal.csv"
CountryRankingFinal=read.csv(paste0(Glink,Flink))
Glink="https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/"
Flink="CountryRankingFinal.csv"
CR=read.csv(paste0(Glink,Flink))
Glink="https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/"
Flink="CountryRankingFinal.csv"
CRF=read.csv(paste0(Glink,Flink))
Glink="https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/"
Flink="CountryRankingFinal.csv"
CRF=read.csv(paste0(Glink,Flink))
Glink="https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/"
Flink="CountryRankingFinal.csv"
CRF=read.csv(paste0(Glink,Flink))
Glink="https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/"
Flink="CountryRankingFinal.csv"
CRF=read.csv(paste0(https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/,CountryRankingFinal.csv))
Glink="https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/"
Flink="CountryRankingFinal.csv"
CRF=read.csv(paste0(https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/CountryRankingFinal.csv))
Glink="https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/"
Flink="CountryRankingFinal.csv"
CountryRankingFinal=read.csv(paste0(Glink,Flink))
Glink="https://github.com/Van-542-Deliverables/Deliverable-2/raw/main"
Flink="CountryRankingFinal.csv"
CountryRankingFinal=read.csv(paste0(Glink,Flink))
Glink="https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/"
Flink="CountryRankingFinal.csv"
CountryRankingFinal=read.csv(paste0(Glink,Flink))
Glink="https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/"
Flink="CountryRankingFinal.csv"
CountryRankingFinal=read.csv(paste0(Glink,Flink))
Glink="https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/"
Flink="CountryRankingFinal.csv"
CountryRankingFinal=read.csv(paste0(Glink/Flink))
Glink="https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/"
Flink="CountryRankingFinal.csv"
CountryRankingFinal=read.csv(paste0(Glink,Flink))
library(readr)
CountryRankingFinal <- read_csv("Desktop/School/UW Evans/5. Winter 2023/542/Deliverable-2/CountryRankingFinal.csv")
View(CountryRankingFinal)
Glink="https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/"
Flink="CountryRankingFinal.csv"
CountryRankingFinal=read.csv(paste0(Glink,Flink))
Glink="https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/"
Flink="CountryRankingFinal.csv"
CountryRankingFinal=read.csv(paste0(Glink, Flink))
Glink="https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/"
Flink="CountryRankingFinal.csv"
CountryRankingFinal=read.csv(paste0(Glink,"Flink"))
Glink='https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/'
Flink='CountryRankingFinal.csv'
CountryRankingFinal=read.csv(paste0(Glink,Flink))
Glink='https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/'
Flink='CountryRankingFinal.csv'
CountryRankingFinal=read.csv(paste0(Glink,Flink))
Glink='https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/'
Flink='CountryRankingFinal.csv'
CountryRankingFinal=read.csv(paste0(Glink,Flink))
Glink='https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/'
Flink='CountryRankingFinal.csv'
CountryRankingFinal=read.csv(paste0(Glink,Flink))
Glink="https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/"
Flink="CountryRankingFinal.csv"
CFR=read.csv(paste0(Glink,Flink))
Glink="https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/CountryRankingFinal.csv"
Flink="CountryRankingFinal.csv"
CFR=read.csv(paste0(Glink,Flink))
Glink="https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/"
Flink="CountryRankingFinal.csv"
CFR=read.csv(paste0(Glink,Flink))
CFR=read.csv(https://raw.githubusercontent.com/Van-542-Deliverables/Deliverable-2/main/CountryRankingFinal.csv?token=GHSAT0AAAAAAB5R27NE4TF7OOAL5L5LEBRSY7SQG3Q)
CFR=read.csv(https://raw.githubusercontent.com/Van-542-Deliverables/Deliverable-2/main/CountryRankingFinal.csv)
CFR<-read.csv(https://raw.githubusercontent.com/Van-542-Deliverables/Deliverable-2/main/CountryRankingFinal.csv)
Glink="https://raw.githubusercontent.com/Van-542-Deliverables/Deliverable-2/main/"
Flink="CountryRankingFinal.csv"
CFR=read.csv(paste0(Glink,Flink))
Glink='https://raw.githubusercontent.com/Van-542-Deliverables/Deliverable-2/main/'
Flink='CountryRankingFinal.csv'
CFR=read.csv(paste0(Glink,Flink))
Glink='https://raw.githubusercontent.com/Van-542-Deliverables/Deliverable-2/main/'
Flink='CountryRankingFinal.csv'
CFR=read.csv("https://raw.githubusercontent.com/Van-542-Deliverables/Deliverable-2/main/CountryRankingFinal.csv"))
Glink='https://raw.githubusercontent.com/Van-542-Deliverables/Deliverable-2/main/'
Flink='CountryRankingFinal.csv'
CFR=read.csv('https://raw.githubusercontent.com/Van-542-Deliverables/Deliverable-2/main/CountryRankingFinal.csv'))
Glink='https://raw.githubusercontent.com/Van-542-Deliverables/Deliverable-2/main/'
Flink='CountryRankingFinal.csv'
CFR=read.csv(https://raw.githubusercontent.com/Van-542-Deliverables/Deliverable-2/main/CountryRankingFinal.csv))
Glink='https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/'
Flink='CountryRankingFinal.csv'
CFR=read.csv(https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/CountryRankingFinal.csv))
Glink='https://github.com/Van-542-Deliverables/Deliverable-2/raw/main'
Flink='CountryRankingFinal.csv'
CFR=read.csv(https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/CountryRankingFinal.csv))
Glink='https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/'
Flink='CountryRankingFinal.csv'
CFR=read.csv(https:/github.com/Van-542-Deliverables/Deliverable-2/raw/main/CountryRankingFinal.csv))
Glink='https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/'
Flink='CountryRankingFinal.csv'
CFR=read.csv(https:github.com/Van-542-Deliverables/Deliverable-2/raw/main/CountryRankingFinal.csv))
Glink='https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/'
Flink='CountryRankingFinal.csv'
CFR=read.csv('https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/CountryRankingFinal.csv')
Glink='https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/'
Flink='CountryRankingFinal.csv'
CFR=read.csv("https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/CountryRankingFinal.csv")
Glink= "https://github.com/Van-542-Deliverables/Deliverable-2/raw/main/"
Flink= "CountryRankingFinal.csv"
CFR= read.csv(paste0(Glink,Flink))
Glink="https://github.com/Van-542-Deliverables/Deliverable-1/raw/main/"
Flink="CountryRankingFinal.csv"
CFR=read.csv(paste0(Glink,Flink))
Glink="https://github.com/Van-542-Deliverables/Deliverable-1/raw/main/"
Flink="CountryRankingFinal.csv"
CFR=read.csv(paste0(Glink,Flink))
row.names(CFR)=NULL
str(CFR)
dataToCluster=CFR[,-c(1,3)]
row.names(dataToCluster)=CFR$name
Glink="https://github.com/Van-542-Deliverables/Deliverable-1/raw/main/"
Flink="CountryRankingFinal.csv"
CFR=read.csv(paste0(Glink,Flink))
row.names(CFR)=NULL
str(CFR)
dataToCluster=CFR[,-c(1,3)]
row.names(dataToCluster)=CFR$name
set.seed(999)
library(cluster)
distanceMatrix=daisy(x=dataToCluster, metric = "gower")
projectedData=cmdscale(distanceMatrix, k=2)
CFR$dim1 = projectedData[,1]
CFR$dim2 = projectedData[,2]
set.seed(999)
library(cluster)
distanceMatrix=daisy(x=dataToCluster, metric = "gower")
projectedData=cmdscale(distanceMatrix, k=2)
CFR$dim1 = projectedData[,1]
CFR$dim2 = projectedData[,2]
CFR[,c('dim1',dim2')][1:10,]
set.seed(999)
library(cluster)
distanceMatrix=daisy(x=dataToCluster, metric = "gower")
projectedData=cmdscale(distanceMatrix, k=2)
CFR$dim1 = projectedData[,1]
CFR$dim2 = projectedData[,2]
CFR[,c('dim1','dim2')][1:10,]
hc=hclust(distanceMatrix)
plot(hc,hang= -1,cex=.5)
hc=hclust(distanceMatrix)
plot(hc,hang= -1,cex=2)
hc=hclust(distanceMatrix)
plot(hc,hang= -1,cex=1)
hc=hclust(distanceMatrix)
plot(hc,hang= -1,cex=.25)
hc=hclust(distanceMatrix)
plot(hc,hang= -1,cex=.5)
hc=hclust(distanceMatrix)
plot(hc,hang= -1,cex=.1)
hc=hclust(distanceMatrix)
plot(hc,hang= -1,cex=.2)
hc=hclust(distanceMatrix)
plot(hc,hang= -1,cex=.2)
library(factoextra)
library(ggplot2)
library(factoextra)
library(ggplot2)
library(factoextra)
fviz_nbclust(dataToCluster, hcut, diss=distanceMatrix, method = "gap_stat", k.max = 10, verbose = F, hc_func = "agnes")
library(ggplot2)
library(factoextra)
install.packages("vctrs")
fviz_nbclust(dataToCluster, hcut, diss=distanceMatrix, method = "gap_stat", k.max = 10, verbose = F, hc_func = "agnes")
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
library(ggplot2)
library(factoextra)
install.packages("vctrs")
fviz_nbclust(dataToCluster, hcut, diss=distanceMatrix, method = "gap_stat", k.max = 10, verbose = F, hc_func = "agnes")
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
fviz_nbclust(dataToCluster, hcut, diss=distanceMatrix, method = "gap_stat", k.max = 10, verbose = F, hc_func = "agnes")
library(factoextra)
fviz_nbclust(dataToCluster, hcut, diss=distanceMatrix, method = "gap_stat", k.max = 10, verbose = F, hc_func = "agnes")
fviz_nbclust(dataToCluster, hcut, diss=distanceMatrix, method = "gap_stat", k.max = 10, verbose = F, hc_func = "diana")
library(factoextra)
fviz_nbclust(dataToCluster, hcut, diss=distanceMatrix, method = "gap_stat", k.max = 15, verbose = F, hc_func = "agnes")
library(factoextra)
fviz_nbclust(dataToCluster, hcut, diss=distanceMatrix, method = "gap_stat", k.max = 18, verbose = F, hc_func = "agnes")
library(factoextra)
fviz_nbclust(dataToCluster, hcut, diss=distanceMatrix, method = "gap_stat", k.max = 15, verbose = F, hc_func = "agnes")
fviz_nbclust(dataToCluster, hcut, diss=distanceMatrix, method = "gap_stat", k.max = 15, verbose = F, hc_func = "diana")
res.agnes=hcut(distanceMatrix, k=NumberOfClusterDesired, isdiss=TRUE, hc_func='agnes', hc_method="ward.D2")
res.agnes=hcut(distanceMatrix, k = NumberOfClusterDesired, isdiss=TRUE, hc_func='agnes', hc_method="ward.D2")
NumberOfClusterDesired=6
res.agnes=hcut(distanceMatrix, k = NumberOfClusterDesired, isdiss=TRUE, hc_func='agnes', hc_method="ward.D2")
NumberOfClusterDesired=6
res.agnes=hcut(distanceMatrix, k = NumberOfClusterDesired, isdiss=TRUE, hc_func='agnes', hc_method="ward.D2")
res.diana=hcut(distanceMatrix, k = NumberOfClusterDesired, isdiss=TRUE, hc_func='diana', hc_method="ward.D2")
CFR$agn=as.factor(res.agnes$cluster)
CFR$dia=as.factor(res.diana$cluster)
View(res.agnes)
View(res.diana)
View(hc)
View(dataToCluster)
View(res.agnes)
View(CountryRankingFinal)
aggregate(data=CFR, region~agn, FUN=mean)
aggregate(data=CFR, Energy~agn, FUN=mean)
fviz_silhouette(res.agnes)
fviz_silhouette(res.agnes)
fviz_silhouette(res.diana)
fviz_silhouette(res.diana)
agnEval=data.frame(res.agnes$silinfo$widths)
diaEval=data.frame(res.diana$silinfo$widths)
agnPoor=rownames(agnEval[agnEval$sil_width<0,])
diaPoor=rownames(diaEval[diaEval$sil_width<0,])
library("qpcR")
agnEval=data.frame(res.agnes$silinfo$widths)
diaEval=data.frame(res.diana$silinfo$widths)
agnPoor=rownames(agnEval[agnEval$sil_width<0,])
diaPoor=rownames(diaEval[diaEval$sil_width<0,])
install.packages("qpcR")
library("qpcR")
agnEval=data.frame(res.agnes$silinfo$widths)
diaEval=data.frame(res.diana$silinfo$widths)
agnPoor=rownames(agnEval[agnEval$sil_width<0,])
diaPoor=rownames(diaEval[diaEval$sil_width<0,])
install.packages("qpcR")
install.packages("rgl")
library("qpcR")
agnEval=data.frame(res.agnes$silinfo$widths)
diaEval=data.frame(res.diana$silinfo$widths)
agnPoor=rownames(agnEval[agnEval$sil_width<0,])
diaPoor=rownames(diaEval[diaEval$sil_width<0,])
install.packages("qpcR")
install.packages("XQuartz")
library("qpcR")
